import pandas as pd
import yaml

with open(r"scripts/config_files/experiments.yaml") as file:
    exps = yaml.load(file, Loader=yaml.FullLoader)
exps = exps.get("Experiments")

with open(r"scripts/config_files/labelled_exps.yaml") as file:
    labelled_exps = yaml.load(file, Loader=yaml.FullLoader)
labelled_exps = labelled_exps.get("Labelled_Experiments")

with open(r"scripts/config_files/experimentsSampled.yaml") as file:
    sampExps = yaml.load(file, Loader=yaml.FullLoader)
sampExps = sampExps.get("SampledExperiments")

with open(r"scripts/config_files/downsampleTypes.yaml") as file:
    downSampleTypes = yaml.load(file, Loader=yaml.FullLoader)
downsampleTypes = downSampleTypes.get("SamplingTypes")

combo_names = [str(x) for x in range(1,325)]
metrics = ["sil", "db", "ch", "gsea"]
RFTypes = ["Numeric"]
modelFeaturesType = ["pipelinesOnly", "allTermsInteractions"]
wildcard_constraints:
    sample = "|".join(exps),
    combo_name = "|".join(combo_names),
    labelled_sample = "|".join(labelled_exps),
    metrics = "|".join(metrics),
    RFTypes = "|".join(RFTypes),
    sampExps = "|".join(sampExps),
    downsampleTypes = "|".join(downsampleTypes)
print(downsampleTypes)
rule all:
    input:
        expand("data/experiments/{sample}/{sample}-SCE.RDS", sample=exps),
        expand("results/pipecomp_outputs/{sample}/{sample}res.dataset1.endOutputs.rds", sample=exps),
        expand("results/pipecomp_outputs/clusters/{sample}/{combo_name}.csv", sample=exps, combo_name=combo_names),
        expand("results/pipecomp_outputs/H5AD_files/{sample}/{combo_name}.h5ad", sample=exps, combo_name=combo_names),
        expand("results/metrics/{sample}/metrics-{sample}-{combo_name}.csv", sample=exps, combo_name=combo_names),
        expand("results/metrics/metrics_matrices/{sample}-metrics.csv", sample=exps),
        expand("results/metrics/{metric}_unscaled.csv", metric=["sil", "db", "ch"]),
        f"data/experiments/colData.RDS",
        f"results/metrics/all_metrics.RDS",
        f"data/uncorrected_designMatrix_scaled.RDS",
        expand("data/labelled_experiments/{labelled_sample}/ExpDesign-labels-{labelled_sample}.tsv", labelled_sample=labelled_exps),
        expand("results/pipecomp_outputs/labelled_clusters/{labelled_sample}/{combo_name}-labelled.csv", labelled_sample = labelled_exps, combo_name=combo_names),
        expand("results/supervised_metrics/{labelled_sample}/{combo_name}.csv", labelled_sample=labelled_exps, combo_name=combo_names),
        expand("results/supervised_metrics/metrics_matrices/{labelled_sample}-supervised.csv", labelled_sample = labelled_exps),
        expand("results/supervised_metrics/{sup_metric}_unscaled.csv", sup_metric=["ari", "mi", "homo", "fm", "vm", "comp"]),
        f"results/pipecomp_outputs/num_clusters.csv",
        expand("results/gsea_results/{sample}-{combo_name}-gsea.csv", sample=exps, combo_name=combo_names),
        expand("results/gsea_results/gsea_matrices/{sample}-gsea.csv", sample=exps),
        expand("results/gsea_results/gsea_matrices/{sample}-gsea-averaged.csv", sample=exps),
        f"results/gsea_results/all_gsea_means.csv",
        f"data/avg_expr_pca.RDS",
        f"data/train_test_split.RDS",
        f"data/uncorrected_designMatrix_scaled_cleaned.RDS",
        f"results/supervised_metrics/ari_unscaled_cleaned.RDS",
        f"results/pipecomp_outputs/num_clusters_cleaned.RDS",
        f"data/corrected_designMat_unscaled.RDS",
        f"data/corrected_RF_trainMatNumeric_unscaled.RDS",
        f"data/corrected_RF_testMatNumeric_unscaled.RDS",
        expand("results/tuneRF/RFTuned{metric}_{RFType}Params.RDS", metric=metrics, RFType = RFTypes),
        expand("results/models/randomForest/RFPreds_{RFType}Params.RDS", RFType=RFTypes),
        expand("results/figures/RFPlots/RFPlots_{RFType}Params.pdf",RFType=RFTypes),
        "results/figures/randomForest/datasetFeaturePerformanceHeatmaps.pdf",
        "results/figures/randomForest/predictionMetricCorBoxplot.pdf",
        "results/figures/randomForest/predMetricCorBar.pdf",
        "results/figures/randomForest/predictionsARICorBoxplot.pdf",
        "results/figures/randomForest/ariCorBar.pdf",
        "results/models/linearRegression/linearRegressionPreds.RDS",
        "results/figures/RFPlots/RF_featImp.pdf",
        f"results/figures/LRPlots/LRPlots.pdf",
        "results/figures/linearRegression/datasetFeaturePerformanceHeatmapsLR.pdf",
        "results/figures/linearRegression/predictionMetricCorBoxplotLR.pdf",
        "results/figures/linearRegression/predMetricCorBarLR.pdf",
        "results/figures/linearRegression/predictionsARICorBoxplotLR.pdf",
        "results/figures/linearRegression/ariCorBarLR.pdf",
        f"results/figures/LRPlots/LR_featImp.pdf",
        "results/figures/uncorrectedMetricsHeatmaps.pdf",
        f"results/figures/datasetFeaturesHeatmap.pdf",
        "results/paperData/pipelineParams.csv",
        "results/paperData/datasetFeatures.csv",
        "results/paperData/silCorrectedImputed.csv",
        "results/paperData/dbCorrectedImputed.csv",
        "results/paperData/chCorrectedImputed.csv",
        "results/paperData/gseaScaledImputed.csv",
        "results/paperData/gsea_unscaled.csv",
        "results/figures/randomForest/RFTuning.pdf",
        "results/figures/linearRegression/LRTuning.pdf",
        "results/models/linearRegression/allTermsInteractions/LR_int_allTerms.RDS",
        "results/models/linearRegression/pipelinesOnly/LR_pipelinesOnly.RDS",
        expand("results/tuneRF/pipelinesOnly/RF{metric}_pipelinesOnly.RDS", metric=metrics),
        "results/models/randomForest/pipelinesOnly/pipelinesOnlyRFPreds_Params.RDS",
        "results/figures/linearRegression/LRinteractions/LR_int_allTerms_plots.pdf",
        "results/figures/linearRegression/pipelinesOnly/LR_pipelinesOnly_plots.pdf",
        "results/figures/randomForest/pipelinesOnly/RFpipelinesOnly_plots.pdf",
        f"results/figures/randomForest/allTermsInteractions/RFAllTermsInteractionsPlots.pdf",
        expand("/home/campbell/cfang/automl_scrna/results/pipecomp_outputs/paperData/clusters/{sample}/{sample}-101.csv", sample=exps),
        expand("results/pipecomp_outputs/paperData/clusters/zipped/{sample}.zip", sample=exps),
        expand("data/experiments/downsampledExperiments/{sample}/{sample}-SCE-50.RDS", sample=exps),
        expand("data/experiments/downsampledExperiments/{sample}/{sample}-SCE-75.RDS", sample=exps),
        expand("data/experiments/downsampledExperiments/{sample}/{sample}-SCE-downsampleCounts-50.RDS", sample=exps),
        #expand("results/pipecomp_outputs/{sample}/{sampExps}res.dataset1.endOutputs.rds", sample=exps, sampExps=sampExps),
        expand("results/pipecomp_outputs/{sample}/{sample}-{downsampleTypes}.RDSres.dataset1.endOutputs.rds", sample=exps, downsampleTypes=downsampleTypes),
        expand("results/pipecomp_outputs/clusters/{sample}/{downsampleTypes}/{combo_name}.csv", sample=exps, combo_name=combo_names, downsampleTypes=downsampleTypes),
        expand("results/pipecomp_outputs/H5AD_files/{sample}/{downsampleTypes}/{combo_name}.h5ad", sample=exps, downsampleTypes = downsampleTypes, combo_name=combo_names),
        expand("results/metrics/{sample}/{downsampleTypes}/metrics-{sample}-{combo_name}.csv", sample=exps, downsampleTypes = downsampleTypes, combo_name=combo_names),
        expand("results/pipecomp_outputs/labelled_clusters/{labelled_sample}/{downsampleTypes}/{combo_name}-labelled.csv", combo_name=combo_names, labelled_sample=labelled_exps, downsampleTypes=downsampleTypes),
        expand("results/supervised_metrics/{labelled_sample}/{downsampleTypes}/{combo_name}.csv", labelled_sample = labelled_exps, downsampleTypes=downsampleTypes, combo_name=combo_names),
        expand("data/experiments/colData-{downsampleTypes}.RDS", downsampleTypes=downsampleTypes)
rule create_sce:
    input:
        f"data/experiments/{{sample}}"
    output:
        f"data/experiments/{{sample}}/{{sample}}-SCE.RDS"
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=15000
    shell:
        "Rscript scripts/Rscripts/clustering/create_sce.R {input[0]}"
rule run_pipeline:
    input:
        f"scripts/config_files/alternatives.yaml",
        f"data/experiments/{{sample}}/{{sample}}-SCE.RDS"
    output:
        f"results/pipecomp_outputs/{{sample}}/{{sample}}res.dataset1.endOutputs.rds",
    container:
        "../pipecomp-singularity.sif"
    resources:
         mem_mb=128900
    shell:
        "Rscript scripts/Rscripts/clustering/run_pipecomp.R {input[0]} {input[1]}"
rule split_clusters:
    input:
        f"results/pipecomp_outputs/{{sample}}/{{sample}}res.dataset1.endOutputs.rds"
    output:
        expand("results/pipecomp_outputs/clusters/{{sample}}/{combo_name}.csv", combo_name=combo_names),
        expand("results/pipecomp_outputs/H5AD_files/{{sample}}/{combo_name}.h5ad", combo_name=combo_names)
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=128900
    shell:
        "Rscript scripts/Rscripts/clustering/split_clusters.R {input[0]}"
rule compute_metrics:
    input:
        f"results/pipecomp_outputs/H5AD_files/{{sample}}/{{combo_name}}.h5ad",
        f"results/pipecomp_outputs/clusters/{{sample}}/{{combo_name}}.csv"
    output:
        f"results/metrics/{{sample}}/metrics-{{sample}}-{{combo_name}}.csv"
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=50000
    shell:
        "python3 scripts/python_scripts/metrics.py --sce {input[0]} --clust {input[1]}"
rule make_metrics_matrices:
    input:
        expand("results/metrics/{{sample}}/metrics-{{sample}}-{combo_name}.csv",combo_name=combo_names)
    output:
        f"results/metrics/metrics_matrices/{{sample}}-metrics.csv"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/make_metrics_matrix.R {input}"
rule aggregate_all_metrics:
    input:
        expand("results/metrics/metrics_matrices/{sample}-metrics.csv", sample=exps)
    output:
        expand("results/metrics/{metric}_unscaled.csv", metric=["sil", "db", "ch"]),
        f"results/metrics/all_metrics.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/aggregate_all_metrics.R {input}"
rule extract_colData:
    input:
        expand("data/experiments/{sample}/{sample}-SCE.RDS", sample=exps)
    output:
        f"data/experiments/colData.RDS",
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=150000
    shell:
        "Rscript scripts/Rscripts/metrics/extract_colData.R {input}"
rule create_design_matrix:
    input:
        f"results/metrics/all_metrics.RDS",
        f"data/experiments/colData.RDS"
    output:
        f"data/uncorrected_designMatrix_scaled.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/create_design_matrix.R {input}"
rule download_cell_labels:
    output:
        f"data/labelled_experiments/{{labelled_sample}}/ExpDesign-labels-{{labelled_sample}}.tsv"
    shell:
        "curl --output {output} https://www.ebi.ac.uk/gxa/sc/experiment/{wildcards.labelled_sample}/download?fileType=experiment-design&accessKey="
rule merge_labels_with_clusters:
    input:
        f"data/labelled_experiments/{{labelled_sample}}/ExpDesign-labels-{{labelled_sample}}.tsv",
        expand("results/pipecomp_outputs/clusters/{{labelled_sample}}/{combo_name}.csv", combo_name=combo_names)
    output:
        expand("results/pipecomp_outputs/labelled_clusters/{{labelled_sample}}/{combo_name}-labelled.csv", combo_name=combo_names)
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/supervised_metrics_clusts.R {input}"
rule compute_supervised_metrics:
    input:
        f"results/pipecomp_outputs/labelled_clusters/{{labelled_sample}}/{{combo_name}}-labelled.csv"
    output:
        f"results/supervised_metrics/{{labelled_sample}}/{{combo_name}}.csv"
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=30000
    shell:
        "python3 scripts/python_scripts/supervised_metrics.py --clust {input[0]}"
rule make_supervised_matrices:
    input:
        expand("results/supervised_metrics/{{labelled_sample}}/{combo_name}.csv", combo_name=combo_names)
    output:
        #expand("results/supervised_metrics/{{labelled_sample}}/{sup_metric}_unscaled.csv", sup_metric=["ari", "mi", "homo", "fm", "vm", "comp"])
        f"results/supervised_metrics/metrics_matrices/{{labelled_sample}}-supervised.csv"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/make_supervised_matrices.R {input}"
rule aggregate_super_metrics:
    input:
        expand("results/supervised_metrics/metrics_matrices/{labelled_sample}-supervised.csv", labelled_sample=labelled_exps)
    output:
        expand("results/supervised_metrics/{sup_metric}_unscaled.csv", sup_metric=["ari", "mi", "homo", "fm", "vm", "comp"])
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/aggregate_super_metrics.R {input}"
rule num_clusts:
    input:
        expand("results/pipecomp_outputs/{sample}/{sample}res.dataset1.endOutputs.rds", sample=exps)
    output:
        "results/pipecomp_outputs/num_clusters.csv"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/find_num_clusters.R {input}"
rule compute_gsea_split:
    input:
        f"data/experiments/{{sample}}/{{sample}}-SCE.RDS",
        f"results/pipecomp_outputs/{{sample}}/{{sample}}res.dataset1.endOutputs.rds"
    output:
        f"results/gsea_results/{{sample}}-{{combo_name}}-gsea.csv"
    container:
        "../pipecomp-singularity.sif"
    resources:
         mem_mb=28000
    shell:
        "Rscript scripts/Rscripts/metrics/gsea/run_gsea_split.R {input} {wildcards.combo_name}"
rule make_gsea_matrices:
    input:
        expand("results/gsea_results/{{sample}}-{combo_name}-gsea.csv", combo_name=combo_names),
        f"results/pipecomp_outputs/{{sample}}/{{sample}}res.dataset1.endOutputs.rds"
    output:
        f"results/gsea_results/gsea_matrices/{{sample}}-gsea.csv"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/gsea/make_gsea_matrices.R {input}"
rule average_gsea:
    input:
        f"results/gsea_results/gsea_matrices/{{sample}}-gsea.csv"
    output:
        f"results/gsea_results/gsea_matrices/{{sample}}-gsea-averaged.csv"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/gsea/average_gsea.R {input}"
rule aggregate_gsea_means:
    input:
        expand("results/gsea_results/gsea_matrices/{sample}-gsea-averaged.csv", sample=exps)
    output:
        f"results/gsea_results/all_gsea_means.csv"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/gsea/aggregate_gsea_means.R {input}"
rule train_test_split:
    input:
        f"data/uncorrected_designMatrix_scaled.RDS",
        f"results/supervised_metrics/ari_unscaled.csv",
    output:
        f"data/train_test_split.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/randomForest/train_test_split.R {input}"
rule gene_expression_pca:
    input:
        expand("data/experiments/{sample}/{sample}-SCE.RDS", sample=exps),
        f"data/train_test_split.RDS"
    output:
        f"data/avg_expr_pca.RDS"
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=50000
    shell:
        "Rscript scripts/Rscripts/metrics/gene_expr_pca.R {input}"
rule clean_RF_data:
    input:
        f"data/uncorrected_designMatrix_scaled.RDS",
        f"results/supervised_metrics/ari_unscaled.csv",
        f"results/pipecomp_outputs/num_clusters.csv",
        f"data/avg_expr_pca.RDS"
    output:
        f"data/uncorrected_designMatrix_scaled_cleaned.RDS",
        f"results/supervised_metrics/ari_unscaled_cleaned.RDS",
        f"results/pipecomp_outputs/num_clusters_cleaned.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/randomForest/clean_RF_data.R {input}"
rule correct_metrics:
    input:
        f"data/uncorrected_designMatrix_scaled_cleaned.RDS",
        f"results/supervised_metrics/ari_unscaled_cleaned.RDS",
        f"results/pipecomp_outputs/num_clusters_cleaned.RDS",
        f"results/gsea_results/all_gsea_means.csv"
    output:
        "data/corrected_designMat_unscaled.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/correct_metrics.R {input}"
rule create_RF_mat:
    input:
        f"data/corrected_designMat_unscaled.RDS",
        f"data/train_test_split.RDS"
    output:
        f"data/corrected_RF_trainMatNumeric_unscaled.RDS",
        f"data/corrected_RF_testMatNumeric_unscaled.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/randomForest/createRFMatScaling.R {input}"
rule tuneRF:
    input:
        f"data/corrected_RF_trainMat{{RFType}}_unscaled.RDS"
    output:
        f"results/tuneRF/RFTuned{{metric}}_{{RFType}}Params.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/randomForest/tuneRF.R {input} {wildcards.metric}"
rule predict_from_tuned_RF:
    input:
        f"data/corrected_RF_trainMat{{RFType}}_unscaled.RDS",
        f"data/corrected_RF_testMat{{RFType}}_unscaled.RDS",
        expand("results/tuneRF/RFTuned{metric}_{{RFType}}Params.RDS", metric=metrics)
    output:
        f"results/models/randomForest/RFPreds_{{RFType}}Params.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/randomForest/RFPredictFromTuned.R {input} {wildcards.RFType}"
rule plot_RF_results:
    input:
        f"results/models/randomForest/RFPreds_NumericParams.RDS",
        f"data/corrected_designMat_unscaled.RDS",
        f"results/supervised_metrics/ari_unscaled_cleaned.RDS"
    output:
        f"results/figures/randomForest/allTermsInteractions/RFAllTermsInteractionsPlots.pdf"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/randomForest/pipelinesOnlyPlotRFResults.R {input} {output}"
rule linear_regression:
    input:
        f"data/corrected_RF_trainMatNumeric_unscaled.RDS",
        f"data/corrected_RF_testMatNumeric_unscaled.RDS"
    output:
        "results/models/linearRegression/linearRegressionPreds.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/linearRegression/linearRegression.R {input}"
rule plot_LR_results:
    input:
        f"results/models/linearRegression/linearRegressionPreds.RDS",
        f"data/corrected_designMat_unscaled.RDS",
        f"results/supervised_metrics/ari_unscaled_cleaned.RDS"
    output:
        f"results/figures/LRPlots/LRPlots.pdf",
        "results/figures/linearRegression/datasetFeaturePerformanceHeatmapsLR.pdf",
        "results/figures/linearRegression/predictionMetricCorBoxplotLR.pdf",
        "results/figures/linearRegression/predMetricCorBarLR.pdf",
        "results/figures/linearRegression/predictionsARICorBoxplotLR.pdf",
        "results/figures/linearRegression/ariCorBarLR.pdf"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/plotting/plotLRResults.R {input}"

rule plot_RF_featImp:
    input:
        f"results/models/randomForest/RFPreds_NumericParams.RDS"
    output:
        f"results/figures/RFPlots/RF_featImp.pdf"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/plotting/RFFeatureImportance.R {input}"
rule plot_LR_featImp:
    input:
        "results/models/linearRegression/linearRegressionPreds.RDS"
    output:
        f"results/figures/LRPlots/LR_featImp.pdf"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/plotting/LRCoefsHeatmap.R {input}"
rule plot_metrics_heatmaps:
    input:
        "data/uncorrected_designMatrix_scaled.RDS",
        "results/pipecomp_outputs/num_clusters_cleaned.RDS",
        "data/corrected_designMat_unscaled.RDS",
        "data/corrected_RF_trainMatNumeric_unscaled.RDS",
        "data/corrected_RF_testMatNumeric_unscaled.RDS"
    output:
        "results/figures/uncorrectedMetricsHeatmaps.pdf",
        f"results/figures/datasetFeaturesHeatmap.pdf"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/plotting/paperHeatmaps.R {input}"
rule save_paper_data:
    input:
        "results/pipecomp_outputs/num_clusters.csv",
        "data/experiments/colData.RDS",
        "results/metrics/sil_unscaled.csv",
        "results/metrics/db_unscaled.csv",
        "results/metrics/ch_unscaled.csv",
        "results/gsea_results/all_gsea_means.csv",
        f"data/corrected_designMat_unscaled.RDS",
        f"data/avg_expr_pca.RDS"
    output:
        "results/paperData/pipelineParams.csv",
        "results/paperData/datasetFeatures.csv",
        "results/paperData/silCorrectedImputed.csv",
        "results/paperData/dbCorrectedImputed.csv",
        "results/paperData/chCorrectedImputed.csv",
        "results/paperData/gseaScaledImputed.csv",
        "results/paperData/sil_unscaled.csv",
        "results/paperData/db_unscaled.csv",
        "results/paperData/ch_unscaled.csv",
        "results/paperData/gsea_unscaled.csv",

    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/saveMetricsDatatoCSV.R {input}"
rule plot_models_tuning:
    input:
        expand("results/tuneRF/RFTuned{metric}_NumericParams.RDS", metric=metrics),
        f"results/models/linearRegression/linearRegressionPreds.RDS"
    output:
        "results/figures/randomForest/RFTuning.pdf",
        "results/figures/linearRegression/LRTuning.pdf"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/plotting/plotModelsTuning.R {input}"
rule linear_regression_interactions:
    input:
        f"data/corrected_RF_trainMatNumeric_unscaled.RDS",
        f"data/corrected_RF_testMatNumeric_unscaled.RDS"
    output:
        "results/models/linearRegression/allTermsInteractions/LR_int_allTerms.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/linearRegression/LR-int.R {input}"
rule linear_regression_pipelines_only:
    input:
        f"data/corrected_RF_trainMatNumeric_unscaled.RDS",
        f"data/corrected_RF_testMatNumeric_unscaled.RDS"
    output:
        "results/models/linearRegression/pipelinesOnly/LR_pipelinesOnly.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/linearRegression/LRpipelinesOnly.R {input}"
rule plot_lr_interactions:
    input:
        "results/models/linearRegression/allTermsInteractions/LR_int_allTerms.RDS",
        f"data/corrected_designMat_unscaled.RDS",
        f"results/supervised_metrics/ari_unscaled_cleaned.RDS"
    output:
        f"results/figures/linearRegression/LRinteractions/LR_int_allTerms_plots.pdf"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/linearRegression/plotLRResults.R {input} {output}"
rule plot_lr_pipelines_only:
    input:
        "results/models/linearRegression/pipelinesOnly/LR_pipelinesOnly.RDS",
        f"data/corrected_designMat_unscaled.RDS",
        f"results/supervised_metrics/ari_unscaled_cleaned.RDS"
    output:
        f"results/figures/linearRegression/pipelinesOnly/LR_pipelinesOnly_plots.pdf"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/linearRegression/plotLRResults.R {input} {output}"

rule RF_pipelines_only:
    input:
        f"data/corrected_RF_trainMatNumeric_unscaled.RDS"
    output:
        f"results/tuneRF/pipelinesOnly/RF{{metric}}_pipelinesOnly.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/randomForest/pipelinesOnlyTuneRF.R {input} {wildcards.metric}"
rule predict_from_tuned_RF_pipelines_only:
    input:
        f"data/corrected_RF_trainMatNumeric_unscaled.RDS",
        f"data/corrected_RF_testMatNumeric_unscaled.RDS",
        expand("results/tuneRF/pipelinesOnly/RF{metric}_pipelinesOnly.RDS", metric=metrics)
    output:
        f"results/models/randomForest/pipelinesOnly/pipelinesOnlyRFPreds_Params.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/randomForest/RFPredictFromTuned.R {input}"

rule plot_rf_pipelines_only:
    input:
        f"results/models/randomForest/pipelinesOnly/pipelinesOnlyRFPreds_Params.RDS",
        f"data/corrected_designMat_unscaled.RDS",
        f"results/supervised_metrics/ari_unscaled_cleaned.RDS"
    output:
        "results/figures/randomForest/{modelFeaturesType}/RF{modelFeaturesType}_plots.pdf"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/randomForest/pipelinesOnlyPlotRFResults.R {input} {output}"
rule downsample_sce:
    input:
        f"data/experiments/{{sample}}/{{sample}}-SCE.RDS"
    output:
        f"data/experiments/downsampledExperiments/{{sample}}/{{sample}}-SCE-50.RDS",
        f"data/experiments/downsampledExperiments/{{sample}}/{{sample}}-SCE-75.RDS"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/clustering/downsampleSCECells.R {input} {output}"
rule downsample_sce_counts:
    input:
        f"data/experiments/{{sample}}/{{sample}}-SCE.RDS"
    output:
        f"data/experiments/downsampledExperiments/{{sample}}/{{sample}}-SCE-downsampleCounts-50.RDS",
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/clustering/downsampleSCECounts.R {input} {output}"

rule run_pipecomp_on_downsampled_sces:
    input:
        f"scripts/config_files/alternatives.yaml",
        f"data/experiments/downsampledExperiments/{{sample}}/{{sample}}-{{downsampleTypes}}.RDS",
    output:
        f"results/pipecomp_outputs/{{sample}}/{{sample}}-{{downsampleTypes}}.RDSres.dataset1.endOutputs.rds",
    container:
        "../pipecomp-singularity.sif"
    resources:
         mem_mb=128900
    shell:
        "Rscript scripts/Rscripts/clustering/run_pipecomp_downsample.R {input} {output}"
rule split_clusters_downsampled:
    input:
        f"results/pipecomp_outputs/{{sample}}/{{sample}}-{{downsampleTypes}}.RDSres.dataset1.endOutputs.rds",
        f"data/experiments/downsampledExperiments/{{sample}}/{{sample}}-{{downsampleTypes}}.RDS"
    output:
        expand("results/pipecomp_outputs/clusters/{{sample}}/{{downsampleTypes}}/{combo_name}.csv", combo_name=combo_names),
        expand("results/pipecomp_outputs/H5AD_files/{{sample}}/{{downsampleTypes}}/{combo_name}.h5ad", combo_name=combo_names)
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=128900
    shell:
        "Rscript scripts/Rscripts/clustering/split_clusters_downsample.R {input} {wildcards.downsampleTypes}"
rule compute_metrics_downsampled:
    input:
        f"results/pipecomp_outputs/H5AD_files/{{sample}}/{{downsampleTypes}}/{{combo_name}}.h5ad",
        f"results/pipecomp_outputs/clusters/{{sample}}/{{downsampleTypes}}/{{combo_name}}.csv"
    output:
        f"results/metrics/{{sample}}/{{downsampleTypes}}/metrics-{{sample}}-{{combo_name}}.csv"
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=50000
    shell:
        "python3 scripts/python_scripts/metrics_downsampled.py --sce {input[0]} --clust {input[1]}"
rule merge_labels_with_clusters_downsampled:
    input:
        f"data/labelled_experiments/{{labelled_sample}}/ExpDesign-labels-{{labelled_sample}}.tsv",
        expand("results/pipecomp_outputs/clusters/{{labelled_sample}}/{{downsampleTypes}}/{combo_name}.csv", combo_name=combo_names)
    output:
        expand("results/pipecomp_outputs/labelled_clusters/{{labelled_sample}}/{{downsampleTypes}}/{combo_name}-labelled.csv", combo_name=combo_names)
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/supervised_metrics_clusts_downsample.R {input} {wildcards.downsampleTypes}"
rule compute_supervised_metrics_downsampled:
    input:
        f"results/pipecomp_outputs/labelled_clusters/{{labelled_sample}}/{{downsampleTypes}}/{{combo_name}}-labelled.csv"
    output:
        f"results/supervised_metrics/{{labelled_sample}}/{{downsampleTypes}}/{{combo_name}}.csv"
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=30000
    shell:
        "python3 scripts/python_scripts/supervised_metrics_downsampled.py --clust {input[0]}"
rule extract_colData_downsample:
    input:
        expand("data/experiments/downsampledExperiments/{sample}/{sample}-{{downsampleTypes}}.RDS", sample=exps)
    output:
        f"data/experiments/colData-{{downsampleTypes}}.RDS",
    container:
        "../pipecomp-singularity.sif"
    resources:
        mem_mb=150000
    shell:
        "Rscript scripts/Rscripts/metrics/extract_colData_downsample.R {wildcards.downsampleTypes} {output} {input} "

rule save_clusters:
    output:
        f"/home/campbell/cfang/automl_scrna/results/pipecomp_outputs/paperData/clusters/{{sample}}/{{sample}}-101.csv"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "Rscript scripts/Rscripts/metrics/saveClusters.R {wildcards.sample}"
rule zip_clusters:
    output:
        f"results/pipecomp_outputs/paperData/clusters/zipped/{{sample}}.zip"
    container:
        "../pipecomp-singularity.sif"
    shell:
        "zip -r results/pipecomp_outputs/paperData/clusters/zipped/{wildcards.sample}.zip results/pipecomp_outputs/paperData/clusters/{wildcards.sample}/"
